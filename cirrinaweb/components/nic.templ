package components

templ NICLayout(nics []NIC, nic NIC) {
    @layoutNICs("NIC - " + nic.Name, nics) {
        @nicTemplate(nic)
    }
}

templ NewNICLayout(nics []NIC) {
    @layoutNICs("NIC - create", nics) {
        @newNicTemplate()
    }
}

templ NICSwitchAdd(nicName string, nics []NIC, switches []Switch) {
    @layoutNICs("NIC - " + nicName, nics) {
        @nicSwitchTemplate(nicName, switches)
    }
}

templ nicTemplate(nic NIC) {
    <div class="h4 mt-3 mt-md-0">/ <a class="text-decoration-none" href="/home">Cirrina</a> / <a class="text-decoration-none" href="/net/nic">NIC</a> / { nic.NameOrID }</div>

    <div data-testid="nicTemplate" class="row m-0 mt-3 mt-md-0">
        <div data-testid="nicTemplateNIC" class="col-12 col-md border p-3">
			<div data-testid="nicsTemplateNICName">NIC Name: { nic.Name }</div>
			<div data-testid="nicsTemplateNICID">ID: { nic.ID }</div>
			<div data-testid="nicsTemplateNICDescr">Description: { nic.Description }</div>
            <div data-testid="nicsTemplateNICType">Type: { nic.Type }</div>
            <div data-testid="nicsTemplateNICDevType">Dev Type: { nic.DevType }</div>
            if nic.RateLimited {
            <div data-testid="nicsTemplateNICRateIn">Rate In: { nic.RateIn } </div>
            <div data-testid="nicsTemplateNICRateOut">Rate Out: { nic.RateOut } </div>
            }
			if nic.Uplink.Name != "" {
			<div data-testid="nicsTemplateNICUplink">Uplink: <a class="text-decoration-none" href={ templ.URL("/net/switch/" + nic.Uplink.Name) }>{ nic.Uplink.Name }</a> (<a class="text-decoration-none" href={ templ.URL("/net/switch/" + nic.Uplink.ID)}>id</a>)
    			@DisconnectSwitchButton(nic)
			</div>
			} else {
    			@ConnectSwitchButton(nic)
			}
			if nic.VM.Name != "" {
			<div data-testid="nicsTemplateNICVM">VM: <a class="text-decoration-none" href={ templ.URL("/vm/" + nic.VM.Name) }>{ nic.VM.Name }</a> (<a class="text-decoration-none" href={ templ.URL("/vm/" + nic.VM.ID)}>id</a>)</div>
			} else {
                if nic.NameOrID != "" {
                    @DeleteNICButton(nic)
                }
			}
        </div>
    </div>
}

templ newNicTemplate() {
    <div class="h4 mt-3 mt-md-0">/ <a class="text-decoration-none" href="/home">Cirrina</a> / <a class="text-decoration-none" href="/net/nic">NIC</a> / New</div>

    <div data-testid="newNicTemplate" class="row m-0 mt-3 mt-md-0">
      <div data-testid="newNicForm"  class="col-12 col-md border p-3">
        <form action={ templ.URL("/net/nic")} method="post">
            <label for="name-input">Name:</label>
            <input class="form-control form-control-sm" type="text" name="name-input" id="name-input">
            <br>
            <label for="type-select">Type:</label>
            <select class="form-select form-select-sm" name="type-select" id="type-select">
              <option value="virtionet">VirtIO-NET</option>
              <option value="e1000">E1000</option>
            </select>
            <br>
            <label for="mac-input">MAC:</label>
            <input class="form-control form-control-sm" type="text" value="AUTO" name="mac-select" id="mac-input">
            <br>
            <label for="dev-type-select">Dev Type:</label>
            <select class="form-select form-select-sm" name="dev-type-select" id="dev-type-select">
              <option value="tap">TAP</option>
              <option value="vmnet">VMNet</option>
              <option value="netgraph">NetGraph</option>
            </select>
            <input class="btn btn-primary btn-sm" type="submit" value="submit"/>
        </form>
      </div>
    </div>
}

templ nicSwitchTemplate(nicName string, switches []Switch) {
    <div data-testid="nicSwitchAddTemplate">
    <label for="switch-select">Choose a switch:</label>
    <form action={ templ.URL("/net/nic/" + nicName + "/uplink") } method="post">
        <select class="form-select form-select-sm" size="5" name="switch-select" id="switch-select">
            for _, s := range switches {
              <option value={ s.Name }>{s.Name}</option>
            }
        </select>
        <input type="submit" value="submit" />
    </form>
    </div>
}

templ NICNotFoundComponent(nics []NIC) {
	@layoutNICs("NIC - Not Found", nics) {
		<div data-testid="homeTemplate"></div>
		<div>NIC Not found</div>
	}
}

templ DeleteNICButton(nic NIC) {
    <button class="btn btn-outline-danger btn-sm me-1" hx-delete={ "/net/nic/" + nic.NameOrID } hx-target="body" hx-confirm={ "Are you sure you wish to delete nic " + nic.NameOrID + "?"}>Delete</button>
}


templ DisconnectSwitchButton(aNIC NIC) {
    <button class="btn btn-outline-danger btn-sm me-1" hx-delete={ "/net/nic/" + aNIC.NameOrID + "/uplink" } hx-target="body" hx-confirm={ "Are you sure you wish to disconnect NIC " + aNIC.NameOrID + "?"}>Disconnect</button>
}

templ ConnectSwitchButton(aNIC NIC) {
    <button class="btn btn-primary btn-sm" hx-get={ "/net/nic/" + aNIC.NameOrID + "/uplink" } hx-target="body">Connect</button>
}