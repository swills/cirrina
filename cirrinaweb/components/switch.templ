package components

templ SwitchLayout(switches []Switch, vmswitch Switch, errString string) {
    @layoutSwitches("Switch - " + vmswitch.Name, switches) {
        @switchTemplate(vmswitch, errString)
    }
}

templ switchTemplate(vmswitch Switch, errString string) {
    <div class="h4 mt-3 mt-md-0">/ <a href="/home">Cirrina</a> / <a href="/net/switch">Switch</a> / { vmswitch.NameOrID }</div>

    <div data-testid="switchTemplate" class="row m-0 mt-3 mt-md-0">
        <div data-testid="switchTemplateSwitch" class="col-12 col-md border p-3">
			<div data-testid="switchesTemplateSwitchName">Switch Name: { vmswitch.Name }</div>
			<div data-testid="switchesTemplateSwitchID">ID: { vmswitch.ID }</div>
			<div data-testid="switchesTemplateSwitchDescr">Description: { vmswitch.Description }</div>
			<div data-testid="switchesTemplateSwitchType">Type: { vmswitch.Type } </div>
			if vmswitch.Uplink != "" {
			<div data-testid="switchTemplateSwitchUplink">Uplink: { vmswitch.Uplink }</div>
			}
            if vmswitch.NameOrID != "" {
                @DeleteSwitchButton(vmswitch)
            }
            if errString != "" {
            <div data-testid="switchTemplateSwitchErrString">Error: { errString }</div>
            }
        </div>
    </div>
}

templ SwitchNotFoundComponent(switches []Switch) {
	@layoutSwitches("Switch - Not Found", switches) {
		<div data-testid="homeTemplate"></div>
		<div>Switch Not found</div>
	}
}


templ DeleteSwitchButton(aSwitch Switch) {
    <button class="btn btn-outline-danger btn-sm me-1" hx-delete={ "/net/switch/" + aSwitch.NameOrID } hx-target="body" hx-confirm={ "Are you sure you wish to delete switch " + aSwitch.NameOrID + "?"}>Delete</button>
}
