// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: cirrina.proto

package cirrina

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VmStatus int32

const (
	VmStatus_STATUS_STOPPED  VmStatus = 0
	VmStatus_STATUS_STARTING VmStatus = 1
	VmStatus_STATUS_RUNNING  VmStatus = 2
	VmStatus_STATUS_STOPPING VmStatus = 3
)

// Enum value maps for VmStatus.
var (
	VmStatus_name = map[int32]string{
		0: "STATUS_STOPPED",
		1: "STATUS_STARTING",
		2: "STATUS_RUNNING",
		3: "STATUS_STOPPING",
	}
	VmStatus_value = map[string]int32{
		"STATUS_STOPPED":  0,
		"STATUS_STARTING": 1,
		"STATUS_RUNNING":  2,
		"STATUS_STOPPING": 3,
	}
)

func (x VmStatus) Enum() *VmStatus {
	p := new(VmStatus)
	*p = x
	return p
}

func (x VmStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VmStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_cirrina_proto_enumTypes[0].Descriptor()
}

func (VmStatus) Type() protoreflect.EnumType {
	return &file_cirrina_proto_enumTypes[0]
}

func (x VmStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VmStatus.Descriptor instead.
func (VmStatus) EnumDescriptor() ([]byte, []int) {
	return file_cirrina_proto_rawDescGZIP(), []int{0}
}

type VMID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *VMID) Reset() {
	*x = VMID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cirrina_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VMID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMID) ProtoMessage() {}

func (x *VMID) ProtoReflect() protoreflect.Message {
	mi := &file_cirrina_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMID.ProtoReflect.Descriptor instead.
func (*VMID) Descriptor() ([]byte, []int) {
	return file_cirrina_proto_rawDescGZIP(), []int{0}
}

func (x *VMID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type KbdLayout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *KbdLayout) Reset() {
	*x = KbdLayout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cirrina_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KbdLayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KbdLayout) ProtoMessage() {}

func (x *KbdLayout) ProtoReflect() protoreflect.Message {
	mi := &file_cirrina_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KbdLayout.ProtoReflect.Descriptor instead.
func (*KbdLayout) Descriptor() ([]byte, []int) {
	return file_cirrina_proto_rawDescGZIP(), []int{1}
}

func (x *KbdLayout) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KbdLayout) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type VMConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description  *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Cpu          *uint32 `protobuf:"varint,4,opt,name=cpu,proto3,oneof" json:"cpu,omitempty"`
	Mem          *uint32 `protobuf:"varint,5,opt,name=mem,proto3,oneof" json:"mem,omitempty"`
	MaxWait      *uint32 `protobuf:"varint,6,opt,name=max_wait,json=maxWait,proto3,oneof" json:"max_wait,omitempty"`
	Restart      *bool   `protobuf:"varint,7,opt,name=restart,proto3,oneof" json:"restart,omitempty"`
	RestartDelay *uint32 `protobuf:"varint,8,opt,name=restart_delay,json=restartDelay,proto3,oneof" json:"restart_delay,omitempty"`
	Screen       *bool   `protobuf:"varint,9,opt,name=screen,proto3,oneof" json:"screen,omitempty"`
	ScreenWidth  *uint32 `protobuf:"varint,10,opt,name=screen_width,json=screenWidth,proto3,oneof" json:"screen_width,omitempty"`
	ScreenHeight *uint32 `protobuf:"varint,11,opt,name=screen_height,json=screenHeight,proto3,oneof" json:"screen_height,omitempty"`
	Vncwait      *bool   `protobuf:"varint,12,opt,name=vncwait,proto3,oneof" json:"vncwait,omitempty"`
	Wireguestmem *bool   `protobuf:"varint,13,opt,name=wireguestmem,proto3,oneof" json:"wireguestmem,omitempty"`
	Tablet       *bool   `protobuf:"varint,14,opt,name=tablet,proto3,oneof" json:"tablet,omitempty"`
	Storeuefi    *bool   `protobuf:"varint,15,opt,name=storeuefi,proto3,oneof" json:"storeuefi,omitempty"`
	Utc          *bool   `protobuf:"varint,16,opt,name=utc,proto3,oneof" json:"utc,omitempty"`
	Hostbridge   *bool   `protobuf:"varint,17,opt,name=hostbridge,proto3,oneof" json:"hostbridge,omitempty"`
	Acpi         *bool   `protobuf:"varint,18,opt,name=acpi,proto3,oneof" json:"acpi,omitempty"`
	Hlt          *bool   `protobuf:"varint,19,opt,name=hlt,proto3,oneof" json:"hlt,omitempty"`
	Eop          *bool   `protobuf:"varint,20,opt,name=eop,proto3,oneof" json:"eop,omitempty"`
	Dpo          *bool   `protobuf:"varint,21,opt,name=dpo,proto3,oneof" json:"dpo,omitempty"`
	Ium          *bool   `protobuf:"varint,22,opt,name=ium,proto3,oneof" json:"ium,omitempty"`
	Net          *bool   `protobuf:"varint,23,opt,name=net,proto3,oneof" json:"net,omitempty"`
	Vncport      *string `protobuf:"bytes,24,opt,name=vncport,proto3,oneof" json:"vncport,omitempty"`
	Mac          *string `protobuf:"bytes,25,opt,name=mac,proto3,oneof" json:"mac,omitempty"`
	Keyboard     *string `protobuf:"bytes,26,opt,name=keyboard,proto3,oneof" json:"keyboard,omitempty"`
	Autostart    *bool   `protobuf:"varint,27,opt,name=autostart,proto3,oneof" json:"autostart,omitempty"`
}

func (x *VMConfig) Reset() {
	*x = VMConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cirrina_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VMConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMConfig) ProtoMessage() {}

func (x *VMConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cirrina_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMConfig.ProtoReflect.Descriptor instead.
func (*VMConfig) Descriptor() ([]byte, []int) {
	return file_cirrina_proto_rawDescGZIP(), []int{2}
}

func (x *VMConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VMConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *VMConfig) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *VMConfig) GetCpu() uint32 {
	if x != nil && x.Cpu != nil {
		return *x.Cpu
	}
	return 0
}

func (x *VMConfig) GetMem() uint32 {
	if x != nil && x.Mem != nil {
		return *x.Mem
	}
	return 0
}

func (x *VMConfig) GetMaxWait() uint32 {
	if x != nil && x.MaxWait != nil {
		return *x.MaxWait
	}
	return 0
}

func (x *VMConfig) GetRestart() bool {
	if x != nil && x.Restart != nil {
		return *x.Restart
	}
	return false
}

func (x *VMConfig) GetRestartDelay() uint32 {
	if x != nil && x.RestartDelay != nil {
		return *x.RestartDelay
	}
	return 0
}

func (x *VMConfig) GetScreen() bool {
	if x != nil && x.Screen != nil {
		return *x.Screen
	}
	return false
}

func (x *VMConfig) GetScreenWidth() uint32 {
	if x != nil && x.ScreenWidth != nil {
		return *x.ScreenWidth
	}
	return 0
}

func (x *VMConfig) GetScreenHeight() uint32 {
	if x != nil && x.ScreenHeight != nil {
		return *x.ScreenHeight
	}
	return 0
}

func (x *VMConfig) GetVncwait() bool {
	if x != nil && x.Vncwait != nil {
		return *x.Vncwait
	}
	return false
}

func (x *VMConfig) GetWireguestmem() bool {
	if x != nil && x.Wireguestmem != nil {
		return *x.Wireguestmem
	}
	return false
}

func (x *VMConfig) GetTablet() bool {
	if x != nil && x.Tablet != nil {
		return *x.Tablet
	}
	return false
}

func (x *VMConfig) GetStoreuefi() bool {
	if x != nil && x.Storeuefi != nil {
		return *x.Storeuefi
	}
	return false
}

func (x *VMConfig) GetUtc() bool {
	if x != nil && x.Utc != nil {
		return *x.Utc
	}
	return false
}

func (x *VMConfig) GetHostbridge() bool {
	if x != nil && x.Hostbridge != nil {
		return *x.Hostbridge
	}
	return false
}

func (x *VMConfig) GetAcpi() bool {
	if x != nil && x.Acpi != nil {
		return *x.Acpi
	}
	return false
}

func (x *VMConfig) GetHlt() bool {
	if x != nil && x.Hlt != nil {
		return *x.Hlt
	}
	return false
}

func (x *VMConfig) GetEop() bool {
	if x != nil && x.Eop != nil {
		return *x.Eop
	}
	return false
}

func (x *VMConfig) GetDpo() bool {
	if x != nil && x.Dpo != nil {
		return *x.Dpo
	}
	return false
}

func (x *VMConfig) GetIum() bool {
	if x != nil && x.Ium != nil {
		return *x.Ium
	}
	return false
}

func (x *VMConfig) GetNet() bool {
	if x != nil && x.Net != nil {
		return *x.Net
	}
	return false
}

func (x *VMConfig) GetVncport() string {
	if x != nil && x.Vncport != nil {
		return *x.Vncport
	}
	return ""
}

func (x *VMConfig) GetMac() string {
	if x != nil && x.Mac != nil {
		return *x.Mac
	}
	return ""
}

func (x *VMConfig) GetKeyboard() string {
	if x != nil && x.Keyboard != nil {
		return *x.Keyboard
	}
	return ""
}

func (x *VMConfig) GetAutostart() bool {
	if x != nil && x.Autostart != nil {
		return *x.Autostart
	}
	return false
}

type VMsQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VMsQuery) Reset() {
	*x = VMsQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cirrina_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VMsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMsQuery) ProtoMessage() {}

func (x *VMsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_cirrina_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMsQuery.ProtoReflect.Descriptor instead.
func (*VMsQuery) Descriptor() ([]byte, []int) {
	return file_cirrina_proto_rawDescGZIP(), []int{3}
}

type KbdQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KbdQuery) Reset() {
	*x = KbdQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cirrina_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KbdQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KbdQuery) ProtoMessage() {}

func (x *KbdQuery) ProtoReflect() protoreflect.Message {
	mi := &file_cirrina_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KbdQuery.ProtoReflect.Descriptor instead.
func (*KbdQuery) Descriptor() ([]byte, []int) {
	return file_cirrina_proto_rawDescGZIP(), []int{4}
}

type RequestID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RequestID) Reset() {
	*x = RequestID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cirrina_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestID) ProtoMessage() {}

func (x *RequestID) ProtoReflect() protoreflect.Message {
	mi := &file_cirrina_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestID.ProtoReflect.Descriptor instead.
func (*RequestID) Descriptor() ([]byte, []int) {
	return file_cirrina_proto_rawDescGZIP(), []int{5}
}

func (x *RequestID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ReqStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Complete bool `protobuf:"varint,1,opt,name=complete,proto3" json:"complete,omitempty"`
	Success  bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ReqStatus) Reset() {
	*x = ReqStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cirrina_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqStatus) ProtoMessage() {}

func (x *ReqStatus) ProtoReflect() protoreflect.Message {
	mi := &file_cirrina_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqStatus.ProtoReflect.Descriptor instead.
func (*ReqStatus) Descriptor() ([]byte, []int) {
	return file_cirrina_proto_rawDescGZIP(), []int{6}
}

func (x *ReqStatus) GetComplete() bool {
	if x != nil {
		return x.Complete
	}
	return false
}

func (x *ReqStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type VMState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  VmStatus `protobuf:"varint,1,opt,name=status,proto3,enum=cirrina.VmStatus" json:"status,omitempty"`
	VncPort int32    `protobuf:"varint,2,opt,name=VncPort,proto3" json:"VncPort,omitempty"`
}

func (x *VMState) Reset() {
	*x = VMState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cirrina_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VMState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMState) ProtoMessage() {}

func (x *VMState) ProtoReflect() protoreflect.Message {
	mi := &file_cirrina_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMState.ProtoReflect.Descriptor instead.
func (*VMState) Descriptor() ([]byte, []int) {
	return file_cirrina_proto_rawDescGZIP(), []int{7}
}

func (x *VMState) GetStatus() VmStatus {
	if x != nil {
		return x.Status
	}
	return VmStatus_STATUS_STOPPED
}

func (x *VMState) GetVncPort() int32 {
	if x != nil {
		return x.VncPort
	}
	return 0
}

type ReqBool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ReqBool) Reset() {
	*x = ReqBool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cirrina_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBool) ProtoMessage() {}

func (x *ReqBool) ProtoReflect() protoreflect.Message {
	mi := &file_cirrina_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBool.ProtoReflect.Descriptor instead.
func (*ReqBool) Descriptor() ([]byte, []int) {
	return file_cirrina_proto_rawDescGZIP(), []int{8}
}

func (x *ReqBool) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_cirrina_proto protoreflect.FileDescriptor

var file_cirrina_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61, 0x22, 0x1c, 0x0a, 0x04, 0x56, 0x4d, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x09, 0x4b, 0x62, 0x64, 0x4c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd9, 0x08, 0x0a, 0x08, 0x56, 0x4d,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x03, 0x63, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a,
	0x03, 0x6d, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x03, 0x6d, 0x65,
	0x6d, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x77, 0x61, 0x69, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x57, 0x61, 0x69,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x07, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x06, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52,
	0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x08, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x76, 0x6e, 0x63, 0x77, 0x61, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0a, 0x52,
	0x07, 0x76, 0x6e, 0x63, 0x77, 0x61, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x77,
	0x69, 0x72, 0x65, 0x67, 0x75, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x0b, 0x52, 0x0c, 0x77, 0x69, 0x72, 0x65, 0x67, 0x75, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6d, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x75, 0x65, 0x66, 0x69, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x75, 0x65, 0x66,
	0x69, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x74, 0x63, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x0e, 0x52, 0x03, 0x75, 0x74, 0x63, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x68,
	0x6f, 0x73, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x0f, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x61, 0x63, 0x70, 0x69, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x48, 0x10,
	0x52, 0x04, 0x61, 0x63, 0x70, 0x69, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x68, 0x6c, 0x74,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x48, 0x11, 0x52, 0x03, 0x68, 0x6c, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x15, 0x0a, 0x03, 0x65, 0x6f, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x48, 0x12, 0x52,
	0x03, 0x65, 0x6f, 0x70, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x64, 0x70, 0x6f, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x13, 0x52, 0x03, 0x64, 0x70, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x15,
	0x0a, 0x03, 0x69, 0x75, 0x6d, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x48, 0x14, 0x52, 0x03, 0x69,
	0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6e, 0x65, 0x74, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x15, 0x52, 0x03, 0x6e, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x76, 0x6e, 0x63, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x16, 0x52,
	0x07, 0x76, 0x6e, 0x63, 0x70, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d,
	0x61, 0x63, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x18, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x19, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x63, 0x70, 0x75, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x65, 0x6d, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x6e, 0x63,
	0x77, 0x61, 0x69, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x69, 0x72, 0x65, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x75, 0x65, 0x66, 0x69, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x75, 0x74, 0x63, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x61, 0x63, 0x70, 0x69, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x68, 0x6c, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x6f, 0x70, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x64, 0x70, 0x6f, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x69, 0x75, 0x6d, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x6e, 0x65, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x6e, 0x63, 0x70, 0x6f,
	0x72, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x61, 0x63, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6b,
	0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x75, 0x74, 0x6f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0x0a, 0x0a, 0x08, 0x56, 0x4d, 0x73, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x22, 0x0a, 0x0a, 0x08, 0x4b, 0x62, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x21, 0x0a,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x41, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x4e, 0x0a, 0x07, 0x56, 0x4d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x29,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61, 0x2e, 0x76, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x6e, 0x63,
	0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x6e, 0x63, 0x50,
	0x6f, 0x72, 0x74, 0x22, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2a, 0x5c, 0x0a, 0x08, 0x76, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x4f, 0x50,
	0x50, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x32, 0xf4, 0x03, 0x0a, 0x06, 0x56, 0x4d, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x29, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x56, 0x4d, 0x12, 0x11, 0x2e, 0x63, 0x69, 0x72,
	0x72, 0x69, 0x6e, 0x61, 0x2e, 0x56, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x0d, 0x2e,
	0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61, 0x2e, 0x56, 0x4d, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x06,
	0x47, 0x65, 0x74, 0x56, 0x4d, 0x73, 0x12, 0x11, 0x2e, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61,
	0x2e, 0x56, 0x4d, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0d, 0x2e, 0x63, 0x69, 0x72, 0x72,
	0x69, 0x6e, 0x61, 0x2e, 0x56, 0x4d, 0x49, 0x44, 0x30, 0x01, 0x12, 0x2f, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x56, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0d, 0x2e, 0x63, 0x69, 0x72, 0x72,
	0x69, 0x6e, 0x61, 0x2e, 0x56, 0x4d, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x63, 0x69, 0x72, 0x72, 0x69,
	0x6e, 0x61, 0x2e, 0x56, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x56, 0x4d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x63, 0x69, 0x72, 0x72,
	0x69, 0x6e, 0x61, 0x2e, 0x56, 0x4d, 0x49, 0x44, 0x1a, 0x10, 0x2e, 0x63, 0x69, 0x72, 0x72, 0x69,
	0x6e, 0x61, 0x2e, 0x56, 0x4d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x4d, 0x12, 0x11, 0x2e, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61,
	0x2e, 0x56, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x10, 0x2e, 0x63, 0x69, 0x72, 0x72,
	0x69, 0x6e, 0x61, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x2c, 0x0a, 0x07, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x56, 0x4d, 0x12, 0x0d, 0x2e, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61,
	0x2e, 0x56, 0x4d, 0x49, 0x44, 0x1a, 0x12, 0x2e, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x06, 0x53, 0x74, 0x6f,
	0x70, 0x56, 0x4d, 0x12, 0x0d, 0x2e, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61, 0x2e, 0x56, 0x4d,
	0x49, 0x44, 0x1a, 0x12, 0x2e, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x56, 0x4d, 0x12, 0x0d, 0x2e, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61, 0x2e, 0x56, 0x4d, 0x49,
	0x44, 0x1a, 0x12, 0x2e, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x2e, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x1a, 0x12, 0x2e, 0x63, 0x69, 0x72,
	0x72, 0x69, 0x6e, 0x61, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x73, 0x12, 0x11, 0x2e, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61, 0x2e, 0x4b,
	0x62, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x12, 0x2e, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e,
	0x61, 0x2e, 0x4b, 0x62, 0x64, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x30, 0x01, 0x42, 0x20, 0x5a,
	0x1e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x6d, 0x6f, 0x75, 0x66, 0x2e, 0x6e, 0x65, 0x74,
	0x2f, 0x73, 0x77, 0x69, 0x6c, 0x6c, 0x73, 0x2f, 0x63, 0x69, 0x72, 0x72, 0x69, 0x6e, 0x61, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cirrina_proto_rawDescOnce sync.Once
	file_cirrina_proto_rawDescData = file_cirrina_proto_rawDesc
)

func file_cirrina_proto_rawDescGZIP() []byte {
	file_cirrina_proto_rawDescOnce.Do(func() {
		file_cirrina_proto_rawDescData = protoimpl.X.CompressGZIP(file_cirrina_proto_rawDescData)
	})
	return file_cirrina_proto_rawDescData
}

var file_cirrina_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cirrina_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_cirrina_proto_goTypes = []interface{}{
	(VmStatus)(0),     // 0: cirrina.vmStatus
	(*VMID)(nil),      // 1: cirrina.VMID
	(*KbdLayout)(nil), // 2: cirrina.KbdLayout
	(*VMConfig)(nil),  // 3: cirrina.VMConfig
	(*VMsQuery)(nil),  // 4: cirrina.VMsQuery
	(*KbdQuery)(nil),  // 5: cirrina.KbdQuery
	(*RequestID)(nil), // 6: cirrina.RequestID
	(*ReqStatus)(nil), // 7: cirrina.ReqStatus
	(*VMState)(nil),   // 8: cirrina.VMState
	(*ReqBool)(nil),   // 9: cirrina.ReqBool
}
var file_cirrina_proto_depIdxs = []int32{
	0,  // 0: cirrina.VMState.status:type_name -> cirrina.vmStatus
	3,  // 1: cirrina.VMInfo.AddVM:input_type -> cirrina.VMConfig
	4,  // 2: cirrina.VMInfo.GetVMs:input_type -> cirrina.VMsQuery
	1,  // 3: cirrina.VMInfo.GetVMConfig:input_type -> cirrina.VMID
	1,  // 4: cirrina.VMInfo.GetVMState:input_type -> cirrina.VMID
	3,  // 5: cirrina.VMInfo.UpdateVM:input_type -> cirrina.VMConfig
	1,  // 6: cirrina.VMInfo.StartVM:input_type -> cirrina.VMID
	1,  // 7: cirrina.VMInfo.StopVM:input_type -> cirrina.VMID
	1,  // 8: cirrina.VMInfo.DeleteVM:input_type -> cirrina.VMID
	6,  // 9: cirrina.VMInfo.RequestStatus:input_type -> cirrina.RequestID
	5,  // 10: cirrina.VMInfo.GetKeyboardLayouts:input_type -> cirrina.KbdQuery
	1,  // 11: cirrina.VMInfo.AddVM:output_type -> cirrina.VMID
	1,  // 12: cirrina.VMInfo.GetVMs:output_type -> cirrina.VMID
	3,  // 13: cirrina.VMInfo.GetVMConfig:output_type -> cirrina.VMConfig
	8,  // 14: cirrina.VMInfo.GetVMState:output_type -> cirrina.VMState
	9,  // 15: cirrina.VMInfo.UpdateVM:output_type -> cirrina.ReqBool
	6,  // 16: cirrina.VMInfo.StartVM:output_type -> cirrina.RequestID
	6,  // 17: cirrina.VMInfo.StopVM:output_type -> cirrina.RequestID
	6,  // 18: cirrina.VMInfo.DeleteVM:output_type -> cirrina.RequestID
	7,  // 19: cirrina.VMInfo.RequestStatus:output_type -> cirrina.ReqStatus
	2,  // 20: cirrina.VMInfo.GetKeyboardLayouts:output_type -> cirrina.KbdLayout
	11, // [11:21] is the sub-list for method output_type
	1,  // [1:11] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_cirrina_proto_init() }
func file_cirrina_proto_init() {
	if File_cirrina_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cirrina_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VMID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cirrina_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KbdLayout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cirrina_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VMConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cirrina_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VMsQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cirrina_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KbdQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cirrina_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cirrina_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cirrina_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VMState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cirrina_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cirrina_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cirrina_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cirrina_proto_goTypes,
		DependencyIndexes: file_cirrina_proto_depIdxs,
		EnumInfos:         file_cirrina_proto_enumTypes,
		MessageInfos:      file_cirrina_proto_msgTypes,
	}.Build()
	File_cirrina_proto = out.File
	file_cirrina_proto_rawDesc = nil
	file_cirrina_proto_goTypes = nil
	file_cirrina_proto_depIdxs = nil
}
