syntax = "proto3";

package cirrina;
option go_package = "gitlab.mouf.net/swills/cirrina";

enum vmStatus {
  STATUS_STOPPED = 0;
  STATUS_STARTING = 1;
  STATUS_RUNNING = 2;
  STATUS_STOPPING = 3;
}

service VMInfo {
  rpc GetVM(VMID) returns (VM);
  rpc GetVMs(VMsQuery) returns (stream VMID);
  rpc RequestStatus(RequestID) returns (ReqStatus);
  rpc AddVM(VM) returns (VMID);
  rpc UpdateVM(VMReConfig) returns (ReqBool);
  rpc StartVM(VMID) returns (RequestID);
  rpc StopVM(VMID) returns (RequestID);
  rpc GetVMState(VMID) returns (VMState);
  rpc DeleteVM(VMID) returns (RequestID);
}

message VMID {
  string value = 1;
}

message VM {
  string name = 1;
  string description = 2;
  uint32 cpu = 3;
  uint32 mem = 4;
  uint32 max_wait = 5;
  bool restart = 6;
  uint32 restart_delay = 7;
  bool screen = 8;
  uint32 screen_width = 9;
  uint32 screen_height = 10;
  bool vncwait = 11;
  bool wireguestmem = 12;
  bool tablet = 13;
  bool storeuefi = 14;
  bool utc = 15;
  bool hostbridge = 16;
  bool acpi = 17;
  bool hlt = 18;
  bool eop = 19;
  bool dpo = 20;
  bool ium = 21;
  bool net = 22;
  string vncport = 23;
  string mac = 24;
}

message VMsQuery {
}

message RequestID {
  string value = 1;
}

message ReqStatus {
  bool complete = 1;
  bool success = 2;
}

message VMState {
  vmStatus status = 1;
  int32 VncPort = 2;
}

message VMReConfig {
  string id = 1;
  optional string name = 2;
  optional string description = 3;
  optional uint32 cpu = 4;
  optional uint32 mem = 5;
  optional uint32 max_wait = 6;
  optional bool restart = 7;
  optional uint32 restart_delay = 8;
  optional bool screen = 9;
  optional uint32 screen_width = 10;
  optional uint32 screen_height = 11;
}

message ReqBool {
  bool success = 1;
}