#!/bin/sh

# PROVIDE: cirrinad
# REQUIRE: NETWORKING SERVERS DAEMON
# KEYWORD: shutdown
#
# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
# cirrinad_enable (bool):       Set to NO by default.
#                               Set it to YES to enable cirrinad.
# cirrinad_config (str):        Configuration file.
#                               Default is "${LOCALBASE}/etc/cirrinad/config.yml"
# cirrinad_user (string):       Set user to run cirrinad.
#                               Default is "cirrinad".
# cirrinad_group (string):      Set group to run cirrinad.
#                               Default is "cirrinad".


. /etc/rc.subr

name=cirrinad
rcvar=cirrinad_enable

load_rc_config $name

: ${cirrinad_enable:="NO"}
: ${cirrinad_config:="/usr/local/etc/cirrinad/config.yml"}
: ${cirrinad_args:="-config ${cirrinad_config}"}
: ${cirrinad_user:="cirrinad"}
: ${cirrinad_group:="cirrinad"}
: ${cirrinad_protect:="YES"}
: ${cirrinad_command:="/usr/local/bin/cirrinad"}

pidfile=/var/run/cirrinad/cirrinad.pid
required_files="${cirrinad_config}"
procname="${cirrinad_command}"
start_postcmd="${name}_poststart"
command="/usr/sbin/daemon"
command_args="-S -T cirrinad -s info -m 3 -f /usr/bin/env ${cirrinad_env} ${procname} ${cirrinad_args}"

cirrinad_poststart()
{
    local timeout=15
    while [ ! -f "${pidfile}" -a ${timeout} -gt 0 ]; do
        timeout=$(( timeout - 1 ))
        sleep 1
    done
    if [ -f "${pidfile}" ]; then
        [ -z "${rc_pid}" ] && eval $_pidcmd
        [ -z "${rc_pid}" ] && return 0
        case ${cirrinad_protect} in
        [Yy][Ee][Ss])
            ${PROTECT} -p ${rc_pid}
            ;;
        esac
    fi
    return 0
}

run_rc_command "$1"
